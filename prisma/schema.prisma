// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  role      String   @default("user")
  name      String?  // ชื่อจริง (ไม่บังคับ)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model Bill {
  id        Int       @id @default(autoincrement())
  date      DateTime  @default(now())
  seller    String
  items     Item[]
}

model Item {
  id         Int     @id @default(autoincrement())
  billId     Int
  variety    String
  grade      String
  weight     Float
  weights    Json?        // ✅ ใส่ field ใหม่เพื่อเก็บน้ำหนักรายเข่ง
  pricePerKg Float
  bill       Bill    @relation(fields: [billId], references: [id])
}





model ExportContainer {
  id             Int      @id @default(autoincrement())
  date           String
  city           String
  containerInfo  String
  containerCode  String
  refCode        String
  durianItems    Json     // เก็บเป็น array ของรายการทุเรียน
  handlingCosts  Json     // ข้อมูลค่าจัดการกล่อง
  boxCosts       Json     // ข้อมูลค่ากล่อง
  inspectionFee  Float
  brandSummary   String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}



model Packing {
  id               Int      @id @default(autoincrement())
  date             String
  bigBoxQuantity   Int
  bigBoxPrice      Float
  smallBoxQuantity Int
  smallBoxPrice    Float
  deductions       Json      // Array ของรายการหักเบิก
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}



model ChemicalDip {
  id         Int      @id @default(autoincrement())
  date       String
  weight     Float
  pricePerKg Float
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}





model ContainerLoading {
  id         Int      @id @default(autoincrement())
  date       String
  containers Json     // array ของ { label, containerCode, price }
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}



model CuttingBill {
  id              Int                @id @default(autoincrement())
  cutterName      String
  startDate       DateTime
  endDate         DateTime
  mainWeight      Float
  mainPrice       Float
  paid            Boolean           @default(false)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt

  deductItems     DeductItem[]
  extraDeductions ExtraDeduction[]
}

model DeductItem {
  id             Int          @id @default(autoincrement())
  label          String
  qty            Float
  unitPrice      Float
  cuttingBillId  Int
  cuttingBill    CuttingBill @relation(fields: [cuttingBillId], references: [id], onDelete: Cascade)
}

model ExtraDeduction {
  id             Int          @id @default(autoincrement())
  label          String
  amount         Float
  cuttingBillId  Int
  cuttingBill    CuttingBill @relation(fields: [cuttingBillId], references: [id], onDelete: Cascade)
}
